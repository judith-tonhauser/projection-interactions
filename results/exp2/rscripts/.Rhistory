ungroup() %>%
mutate(YMin_certainty_Pred_Exp1=Mean_certainty_Pred_Exp1-CILow,YMax_certainty_Pred_Exp1=Mean_certainty_Pred_Exp1+CIHigh) %>%
select(!c(CILow,CIHigh))
summary(exp1.Pred.means)
nrow(exp1.Pred.means) #20
exp2.Pred.means <- exp2 %>%
group_by(short_trigger) %>%
summarize(Mean_certainty_Pred_Exp2 = mean(projective), CILow=ci.low(projective),CIHigh=ci.high(projective)) %>%
ungroup() %>%
mutate(YMin_certainty_Pred_Exp2=Mean_certainty_Pred_Exp2-CILow,YMax_certainty_Pred_Exp2=Mean_certainty_Pred_Exp2+CIHigh) %>%
select(!c(CILow,CIHigh))
summary(exp2.Pred.means)
nrow(exp2.Pred.means) #20
exp1.PredItem.means <- exp1 %>%
group_by(short_trigger,content) %>%
summarize(Mean_certainty_PredItem_Exp1 = mean(projective), CILow=ci.low(projective),CIHigh=ci.high(projective)) %>%
ungroup() %>%
mutate(YMin_certainty_PredItem_Exp1=Mean_certainty_PredItem_Exp1-CILow,YMax_certainty_PredItem_Exp1=Mean_certainty_PredItem_Exp1+CIHigh) %>%
select(!c(CILow,CIHigh))
summary(exp1.PredItem.means)
nrow(exp1.PredItem.means) #400
exp2.PredItem.means <- exp2 %>%
group_by(short_trigger,content) %>%
summarize(Mean_certainty_PredItem_Exp2 = mean(projective), CILow=ci.low(projective),CIHigh=ci.high(projective)) %>%
ungroup() %>%
mutate(YMin_certainty_PredItem_Exp2=Mean_certainty_PredItem_Exp2-CILow,YMax_certainty_PredItem_Exp2=Mean_certainty_PredItem_Exp2+CIHigh) %>%
select(!c(CILow,CIHigh))
summary(exp2.PredItem.means)
nrow(exp2.PredItem.means) #400
exp1.PredItemFact.means <- exp1 %>%
group_by(short_trigger,contentFact,) %>%
summarize(Mean_certainty_PredItemFact_Exp1 = mean(projective), CILow=ci.low(projective),CIHigh=ci.high(projective)) %>%
ungroup() %>%
mutate(YMin_certainty_PredItemFact_Exp1=Mean_certainty_PredItemFact_Exp1-CILow,YMax_certainty_PredItemFact_Exp1=Mean_certainty_PredItemFact_Exp1+CIHigh) %>%
select(!c(CILow,CIHigh))
summary(exp1.PredItemFact.means)
nrow(exp1.PredItemFact.means) #800
exp2.PredItemFact.means <- exp2 %>%
group_by(short_trigger,contentFact,) %>%
summarize(Mean_certainty_PredItemFact_Exp2 = mean(projective), CILow=ci.low(projective),CIHigh=ci.high(projective)) %>%
ungroup() %>%
mutate(YMin_certainty_PredItemFact_Exp2=Mean_certainty_PredItemFact_Exp2-CILow,YMax_certainty_PredItemFact_Exp2=Mean_certainty_PredItemFact_Exp2+CIHigh) %>%
select(!c(CILow,CIHigh))
summary(exp2.PredItemFact.means)
nrow(exp2.PredItemFact.means) #800
# combine the data
pred.means <- left_join(exp1.Pred.means, exp2.Pred.means, by = c("short_trigger"))
nrow(pred.means) #20
summary(pred.means)
predItem.means <- left_join(exp1.PredItem.means, exp2.PredItem.means, by = c("short_trigger","content"))
nrow(predItem.means) #400
summary(predItem.means)
predItemFact.means <- left_join(exp1.PredItemFact.means, exp2.PredItemFact.means, by = c("short_trigger","contentFact"))
nrow(predItemFact.means) #400
summary(predItemFact.means)
cor.test(pred.means$Mean_certainty_Pred_Exp1, pred.means$Mean_certainty_Pred_Exp2, method=c("spearman"))
# .98
cor.test(predItem.means$Mean_certainty_PredItem_Exp1, predItem.means$Mean_certainty_PredItem_Exp2, method=c("spearman"), exact=FALSE)
# .9
cor.test(predItemFact.means$Mean_certainty_PredItemFact_Exp1, predItemFact.means$Mean_certainty_PredItemFact_Exp2, method=c("spearman"), exact=FALSE)
# how many ratings
count = exp1 %>%
group_by(short_trigger,content) %>%
tally(sort=T)
summary(count$n)
count = exp2 %>%
group_by(short_trigger,content) %>%
tally(sort=T)
summary(count$n)
count = exp1 %>%
group_by(short_trigger,contentFact) %>%
tally(sort=T)
summary(count$n)
count = exp2 %>%
group_by(short_trigger,contentFact) %>%
tally(sort=T)
summary(count$n)
# exp1 vs exp2 by predicate
ggplot(pred.means, aes(x=Mean_certainty_Pred_Exp1, y=Mean_certainty_Pred_Exp2)) +
geom_abline(intercept=0, slope=1, linetype="dashed", color = "gray", size=1) +
geom_point(shape=16, size=2, alpha=1) +
xlab("Certainty rating Exp. 1") +
ylab("Certainty rating Exp. 2") +
scale_x_continuous(expand = expansion(mult = c(0, 0)), breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(expand = expansion(mult = c(0, 0)), breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
ggtitle("Spearman's rho = .98")
ggsave(f="../graphs/SUP-certainty-Exp1-by-Exp2.pdf",height=4,width=4)
# exp1 vs exp2 by predicate/item
ggplot(predItem.means, aes(x=Mean_certainty_PredItem_Exp1, y=Mean_certainty_PredItem_Exp2)) +
geom_abline(intercept=0, slope=1, linetype="dashed", color = "gray", size=1) +
geom_point(shape=16, size=2, alpha=1) +
xlab("Certainty rating Exp. 1") +
ylab("Certainty rating Exp. 2") +
scale_x_continuous(expand = expansion(mult = c(0, 0)), breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(expand = expansion(mult = c(0, 0)), breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
ggtitle("Spearman's rho = .9")
ggsave(f="../graphs/SUP-certainty-PredItem-Exp1-by-Exp2.pdf",height=4,width=4)
# exp1 vs exp2 by predicate/item/fact
ggplot(predItemFact.means, aes(x=Mean_certainty_PredItemFact_Exp1, y=Mean_certainty_PredItemFact_Exp2)) +
geom_abline(intercept=0, slope=1, linetype="dashed", color = "gray", size=1) +
geom_point(shape=16, size=2, alpha=1) +
xlab("Certainty rating Exp. 1") +
ylab("Certainty rating Exp. 2") +
scale_x_continuous(expand = expansion(mult = c(0, 0)), breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(expand = expansion(mult = c(0, 0)), breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
ggtitle("Spearman's rho = .85")
ggsave(f="../graphs/SUP-certainty-PredItemFact-Exp1-by-Exp2.pdf",height=4,width=4)
# load the data
exp1 <- read_csv("../data/d.csv")
nrow(exp1) #10100
exp2 <- read_csv("../../exp2/data/d.csv")
nrow(exp2) #10000
exp1.Pred.means <- exp1 %>%
group_by(short_trigger) %>%
summarize(Mean_ai_Pred_Exp1 = mean(ai), CILow=ci.low(ai),CIHigh=ci.high(ai)) %>%
ungroup() %>%
mutate(YMin_ai_Pred_Exp1=Mean_ai_Pred_Exp1-CILow,YMax_ai_Pred_Exp1=Mean_ai_Pred_Exp1+CIHigh) %>%
select(!c(CILow,CIHigh))
summary(exp1.Pred.means)
nrow(exp1.Pred.means) #20
exp2.Pred.means <- exp2 %>%
group_by(short_trigger) %>%
summarize(Mean_ai_Pred_Exp2 = mean(ai), CILow=ci.low(ai),CIHigh=ci.high(ai)) %>%
ungroup() %>%
mutate(YMin_ai_Pred_Exp2=Mean_ai_Pred_Exp2-CILow,YMax_ai_Pred_Exp2=Mean_ai_Pred_Exp2+CIHigh) %>%
select(!c(CILow,CIHigh))
summary(exp2.Pred.means)
nrow(exp2.Pred.means) #20
exp1.PredItem.means <- exp1 %>%
group_by(short_trigger,content) %>%
summarize(Mean_ai_PredItem_Exp1 = mean(ai), CILow=ci.low(ai),CIHigh=ci.high(ai)) %>%
ungroup() %>%
mutate(YMin_ai_PredItem_Exp1=Mean_ai_PredItem_Exp1-CILow,YMax_ai_PredItem_Exp1=Mean_ai_PredItem_Exp1+CIHigh) %>%
select(!c(CILow,CIHigh))
summary(exp1.PredItem.means)
nrow(exp1.PredItem.means) #400
exp2.PredItem.means <- exp2 %>%
group_by(short_trigger,content) %>%
summarize(Mean_ai_PredItem_Exp2 = mean(ai), CILow=ci.low(ai),CIHigh=ci.high(ai)) %>%
ungroup() %>%
mutate(YMin_ai_PredItem_Exp2=Mean_ai_PredItem_Exp2-CILow,YMax_ai_PredItem_Exp2=Mean_ai_PredItem_Exp2+CIHigh) %>%
select(!c(CILow,CIHigh))
summary(exp2.PredItem.means)
nrow(exp2.PredItem.means) #400
exp1.PredItemFact.means <- exp1 %>%
group_by(short_trigger,contentFact) %>%
summarize(Mean_ai_PredItemFact_Exp1 = mean(ai), CILow=ci.low(ai),CIHigh=ci.high(ai)) %>%
ungroup() %>%
mutate(YMin_ai_PredItemFact_Exp1=Mean_ai_PredItemFact_Exp1-CILow,YMax_ai_PredItemFact_Exp1=Mean_ai_PredItemFact_Exp1+CIHigh) %>%
select(!c(CILow,CIHigh))
summary(exp1.PredItemFact.means)
nrow(exp1.PredItemFact.means) #800
exp2.PredItemFact.means <- exp2 %>%
group_by(short_trigger,contentFact) %>%
summarize(Mean_ai_PredItemFact_Exp2 = mean(ai), CILow=ci.low(ai),CIHigh=ci.high(ai)) %>%
ungroup() %>%
mutate(YMin_ai_PredItemFact_Exp2=Mean_ai_PredItemFact_Exp2-CILow,YMax_ai_PredItemFact_Exp2=Mean_ai_PredItemFact_Exp2+CIHigh) %>%
select(!c(CILow,CIHigh))
summary(exp2.PredItemFact.means)
nrow(exp2.PredItemFact.means) #800
# combine the data
pred.means <- left_join(exp1.Pred.means, exp2.Pred.means, by = c("short_trigger"))
nrow(pred.means) #20
summary(pred.means)
predItem.means <- left_join(exp1.PredItem.means, exp2.PredItem.means, by = c("short_trigger","content"))
nrow(predItem.means) #400
summary(predItem.means)
predItemFact.means <- left_join(exp1.PredItemFact.means, exp2.PredItemFact.means, by = c("short_trigger","contentFact"))
nrow(predItemFact.means) #400
summary(predItemFact.means)
cor.test(pred.means$Mean_ai_Pred_Exp1, pred.means$Mean_ai_Pred_Exp2, method=c("spearman"))
# .99
cor.test(predItem.means$Mean_ai_PredItem_Exp1, predItem.means$Mean_ai_PredItem_Exp2, method=c("spearman"), exact=FALSE)
# .84
cor.test(predItemFact.means$Mean_ai_PredItemFact_Exp1, predItemFact.means$Mean_ai_PredItemFact_Exp2, method=c("spearman"), exact=FALSE)
# exp1 vs exp2 by predicate
ggplot(pred.means, aes(x=Mean_ai_Pred_Exp1, y=Mean_ai_Pred_Exp2)) +
geom_abline(intercept=0, slope=1, linetype="dashed", color = "gray", size=1) +
geom_point(shape=16, size=2, alpha=1) +
xlab("Asking-whether rating Exp. 1") +
ylab("Asking-whether rating Exp. 2") +
scale_x_continuous(expand = expansion(mult = c(0, 0)), breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(expand = expansion(mult = c(0, 0)), breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
ggtitle("Spearman's rho = .99")
ggsave(f="../graphs/SUP-ai-Exp1-by-Exp2.pdf",height=4,width=4)
# exp1 vs exp2 by predicate/item
ggplot(predItem.means, aes(x=Mean_ai_PredItem_Exp1, y=Mean_ai_PredItem_Exp2)) +
geom_abline(intercept=0, slope=1, linetype="dashed", color = "gray", size=1) +
geom_point(shape=16, size=2, alpha=1) +
xlab("Asking-whether rating Exp. 1") +
ylab("Asking-whether rating Exp. 2") +
scale_x_continuous(expand = expansion(mult = c(0, 0)), breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(expand = expansion(mult = c(0, 0)), breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
ggtitle("Spearman's rho = .84")
ggsave(f="../graphs/SUP-ai-PredItem-Exp1-by-Exp2.pdf",height=4,width=4)
# exp1 vs exp2 by predicate/item/fact
ggplot(predItemFact.means, aes(x=Mean_ai_PredItemFact_Exp1, y=Mean_ai_PredItemFact_Exp2)) +
geom_abline(intercept=0, slope=1, linetype="dashed", color = "gray", size=1) +
geom_point(shape=16, size=2, alpha=1) +
xlab("Asking-whether rating Exp. 1") +
ylab("Asking-whether rating Exp. 2") +
scale_x_continuous(expand = expansion(mult = c(0, 0)), breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(expand = expansion(mult = c(0, 0)), breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
ggtitle("Spearman's rho = .72")
ggsave(f="../graphs/SUP-ai-PredItemFact-Exp1-by-Exp2.pdf",height=4,width=4)
#### CODE ENDS HERE?
# comparisons of at-issueness ratings in Exps 1 and 2 ----
# load the relevant data
exp1 <- read_csv("../../main/exp1/data/d.csv")
nrow(exp1) #10100
# Exp2: interaction of prior beliefs, at-issueness and projection
# for 20 clause-embedding predicates
# graphs.R
# load required packages
library(tidyverse)
library(ggrepel)
library(dichromat)
library(forcats)
library(RColorBrewer)
library(curl) # to read data from github repo
library(gridExtra)
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
theme_set(theme_bw())
source('../../helpers.R')
# color-blind-friendly palette
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# load the data
d <- read_csv("../data/d.csv")
nrow(d) #10000
# Fig.3: by-predicate correlations in the raw data ----
# sort predicates by projection mean
proj.means = d %>%
group_by(short_trigger) %>%
summarize(Mean_proj = mean(projective)) %>%
mutate(short_trigger = fct_rev(fct_reorder(as.factor(short_trigger),Mean_proj)))
proj.means
d = d %>%
mutate(short_trigger = fct_relevel(short_trigger,levels(proj.means$short_trigger)))
levels(d$short_trigger)
# color-code the predicates
d = d %>%
mutate(predicateType = case_when(short_trigger == "discover" ~ "factive",
short_trigger == "know" ~ "factive",
short_trigger == "be annoyed" ~ "factive",
short_trigger == "reveal" ~ "factive",
short_trigger == "see" ~ "factive",
TRUE ~ "nonfactive"))
table(d$short_trigger,d$predicateType)
# projection by prior
ggplot(d, aes(x=Mean_prior, y=projective)) +
geom_smooth(aes(color=predicateType,fill=predicateType),method="lm") +
geom_point(aes(color=predicateType), shape=20, size=1, alpha=.2) +
scale_color_manual(values=c("#E69F00","#999999")) +
scale_fill_manual(values=c("#E69F00","#999999")) +
guides(color = "none", fill = "none") +
xlab("Mean prior probability ratings") +
ylab("Certainty ratings (projection)") +
scale_x_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
facet_wrap(. ~ short_trigger) +
theme(strip.background=element_rect(fill="white"))
ggsave(f="../graphs/projection-by-prior.pdf",height=5,width=5)
# projection by at-issueness
ggplot(d, aes(x=ai, y=projective)) +
geom_smooth(aes(color=predicateType,fill = predicateType),method="lm") +
geom_point(aes(color=predicateType), shape=20, size=1, alpha=.2) +
scale_color_manual(values=c("#E69F00","#999999")) +
scale_fill_manual(values=c("#E69F00","#999999")) +
guides(color = "none", fill = "none") +
xlab("Asking-whether ratings (not-at-issueness)") +
ylab("Certainty ratings (projection)") +
scale_x_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
facet_wrap(. ~ short_trigger) +
theme(strip.background=element_rect(fill="white"))
ggsave(f="../graphs/projection-by-ai.pdf",height=5,width=5)
# projection by at-issueness and prior
table(d$prior_type)
ggplot(d, aes(x=ai, y=projective)) +
geom_smooth(aes(color=predicateType,fill=predicateType,linetype = prior_type),method="lm") +
scale_linetype_manual(name = "Prior probability",
labels = c("high", "low"),
values=c("solid", "dotted")) +
geom_point(aes(color=predicateType), shape=20, size=1, alpha=.2) +
scale_color_manual(values=c("#E69F00","#999999")) +
scale_fill_manual(values=c("#E69F00","#999999")) +
guides(color = "none", fill = "none") +
xlab("Asking-whether ratings (not-at-issueness)") +
ylab("Certainty ratings (projection)") +
scale_x_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
guides(color = "none", linetype = "none") +
#guides(linetype = guide_legend(override.aes = list(fill = NA))) +
theme(legend.key = element_rect(fill = "white"), legend.position = "right") +
theme(legend.background = element_rect(fill ="white")) +
coord_fixed(ratio = 1) +
facet_wrap(. ~ short_trigger) +
theme(strip.background=element_rect(fill="white"))
ggsave(f="../graphs/projection-by-ai-and-prior.pdf",height=5,width=5)
# # at-issueness by prior
ggplot(d, aes(x=Mean_prior, y=ai)) +
geom_smooth(aes(color=predicateType,fill=predicateType),method="lm") +
geom_point(aes(color=predicateType), shape=20, size=1, alpha=.2) +
scale_color_manual(values=c("#E69F00","#999999")) +
scale_fill_manual(values=c("#E69F00","#999999")) +
guides(color = "none", fill = "none") +
xlab("Mean prior probability ratings") +
ylab("Asking-whether ratings (not-at-issueness)") +
scale_x_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
facet_wrap(. ~ short_trigger) +
theme(strip.background=element_rect(fill="white"))
ggsave(f="../graphs/ai-by-prior.pdf",height=5,width=5)
# Supplemental figures ----
### by-block by-predicate correlations of the factors
# load the data
d_projai <- read_csv("../data/d_projai.csv")
nrow(d_projai) #5180
d_aiproj <- read_csv("../data/d_aiproj.csv")
nrow(d_aiproj) #4820
# sort predicates by projection mean
proj.means = d %>%
group_by(short_trigger) %>%
summarize(Mean_proj = mean(projective)) %>%
mutate(short_trigger = fct_rev(fct_reorder(as.factor(short_trigger),Mean_proj)))
proj.means
d_projai = d_projai %>%
mutate(short_trigger = fct_relevel(short_trigger,levels(proj.means$short_trigger)))
levels(d_projai$short_trigger)
d_aiproj = d_aiproj %>%
mutate(short_trigger = fct_relevel(short_trigger,levels(proj.means$short_trigger)))
levels(d_aiproj$short_trigger)
# color-code the predicates
d_projai = d_projai %>%
mutate(predicateType = case_when(short_trigger == "discover" ~ "factive",
short_trigger == "know" ~ "factive",
short_trigger == "be annoyed" ~ "factive",
short_trigger == "reveal" ~ "factive",
short_trigger == "see" ~ "factive",
TRUE ~ "nonfactive"))
d_aiproj = d_aiproj %>%
mutate(predicateType = case_when(short_trigger == "discover" ~ "factive",
short_trigger == "know" ~ "factive",
short_trigger == "be annoyed" ~ "factive",
short_trigger == "reveal" ~ "factive",
short_trigger == "see" ~ "factive",
TRUE ~ "nonfactive"))
# proj/ai
# projection by prior
ggplot(d_projai, aes(x=Mean_prior, y=projective)) +
geom_smooth(aes(color=predicateType,fill=predicateType),method="lm") +
geom_point(aes(color=predicateType), shape=20, size=1, alpha=.2) +
scale_color_manual(values=c("#E69F00","#999999")) +
scale_fill_manual(values=c("#E69F00","#999999")) +
guides(color = "none", fill = "none") +
xlab("Mean prior probability ratings") +
ylab("Certainty ratings (projection)") +
scale_x_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
facet_wrap(. ~ short_trigger) +
theme(strip.background=element_rect(fill="white"))
ggsave(f="../graphs/SUP-projai-projection-by-prior.pdf",height=5,width=5)
# projection by at-issueness
ggplot(d_projai, aes(x=ai, y=projective)) +
geom_smooth(aes(color=predicateType,fill = predicateType),method="lm") +
geom_point(aes(color=predicateType), shape=20, size=1, alpha=.2) +
scale_color_manual(values=c("#E69F00","#999999")) +
scale_fill_manual(values=c("#E69F00","#999999")) +
guides(color = "none", fill = "none") +
xlab("Asking-whether ratings (not-at-issueness)") +
ylab("Certainty ratings (projection)") +
scale_x_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
facet_wrap(. ~ short_trigger) +
theme(strip.background=element_rect(fill="white"))
ggsave(f="../graphs/SUP-projai-projection-by-ai.pdf",height=5,width=5)
# projection by at-issueness and prior
ggplot(d_projai, aes(x=ai, y=projective)) +
geom_smooth(aes(color=predicateType,fill=predicateType,linetype = prior_type),method="lm") +
scale_linetype_manual(name = "Prior probability",
labels = c("high", "low"),
values=c("solid", "dotted")) +
geom_point(aes(color=predicateType), shape=20, size=1, alpha=.2) +
scale_color_manual(values=c("#E69F00","#999999")) +
scale_fill_manual(values=c("#E69F00","#999999")) +
guides(color = "none", fill = "none") +
xlab("Asking-whether ratings (not-at-issueness)") +
ylab("Certainty ratings (projection)") +
scale_x_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
guides(color = "none", linetype = "none") +
#guides(linetype = guide_legend(override.aes = list(fill = NA))) +
theme(legend.key = element_rect(fill = "white"), legend.position = "right") +
theme(legend.background = element_rect(fill ="white")) +
coord_fixed(ratio = 1) +
facet_wrap(. ~ short_trigger) +
theme(strip.background=element_rect(fill="white"))
ggsave(f="../graphs/SUP-projai-projection-by-ai-and-prior.pdf",height=5,width=5)
# # at-issueness by prior
ggplot(d_projai, aes(x=Mean_prior, y=ai)) +
geom_smooth(aes(color=predicateType,fill=predicateType),method="lm") +
geom_point(aes(color=predicateType), shape=20, size=1, alpha=.2) +
scale_color_manual(values=c("#E69F00","#999999")) +
scale_fill_manual(values=c("#E69F00","#999999")) +
guides(color = "none", fill = "none") +
xlab("Mean prior probability ratings") +
ylab("Asking-whether ratings (not-at-issueness)") +
scale_x_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
facet_wrap(. ~ short_trigger) +
theme(strip.background=element_rect(fill="white"))
ggsave(f="../graphs/SUP-projai-ai-by-prior.pdf",height=5,width=5)
# ai/proj
# projection by prior
ggplot(d_aiproj, aes(x=Mean_prior, y=projective)) +
geom_smooth(aes(color=predicateType,fill=predicateType),method="lm") +
geom_point(aes(color=predicateType), shape=20, size=1, alpha=.2) +
scale_color_manual(values=c("#E69F00","#999999")) +
scale_fill_manual(values=c("#E69F00","#999999")) +
guides(color = "none", fill = "none") +
xlab("Mean prior probability ratings") +
ylab("Certainty ratings (projection)") +
scale_x_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
facet_wrap(. ~ short_trigger) +
theme(strip.background=element_rect(fill="white"))
ggsave(f="../graphs/SUP-aiproj-projection-by-prior.pdf",height=5,width=5)
# projection by at-issueness
ggplot(d_aiproj, aes(x=ai, y=projective)) +
geom_smooth(aes(color=predicateType,fill = predicateType),method="lm") +
geom_point(aes(color=predicateType), shape=20, size=1, alpha=.2) +
scale_color_manual(values=c("#E69F00","#999999")) +
scale_fill_manual(values=c("#E69F00","#999999")) +
guides(color = "none", fill = "none") +
xlab("Asking-whether ratings (not-at-issueness)") +
ylab("Certainty ratings (projection)") +
scale_x_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
facet_wrap(. ~ short_trigger) +
theme(strip.background=element_rect(fill="white"))
ggsave(f="../graphs/SUP-aiproj-projection-by-ai.pdf",height=5,width=5)
# projection by at-issueness and prior
ggplot(d_aiproj, aes(x=ai, y=projective)) +
geom_smooth(aes(color=predicateType,fill=predicateType,linetype = prior_type),method="lm") +
scale_linetype_manual(name = "Prior probability",
labels = c("high", "low"),
values=c("solid", "dotted")) +
geom_point(aes(color=predicateType), shape=20, size=1, alpha=.2) +
scale_color_manual(values=c("#E69F00","#999999")) +
scale_fill_manual(values=c("#E69F00","#999999")) +
guides(color = "none", fill = "none") +
xlab("Asking-whether ratings (not-at-issueness)") +
ylab("Certainty ratings (projection)") +
scale_x_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
guides(color = "none", linetype = "none") +
#guides(linetype = guide_legend(override.aes = list(fill = NA))) +
theme(legend.key = element_rect(fill = "white"), legend.position = "right") +
theme(legend.background = element_rect(fill ="white")) +
coord_fixed(ratio = 1) +
facet_wrap(. ~ short_trigger) +
theme(strip.background=element_rect(fill="white"))
ggsave(f="../graphs/SUP-aiproj-projection-by-ai-and-prior.pdf",height=5,width=5)
# # at-issueness by prior
ggplot(d_aiproj, aes(x=Mean_prior, y=ai)) +
geom_smooth(aes(color=predicateType,fill=predicateType),method="lm") +
geom_point(aes(color=predicateType), shape=20, size=1, alpha=.2) +
scale_color_manual(values=c("#E69F00","#999999")) +
scale_fill_manual(values=c("#E69F00","#999999")) +
guides(color = "none", fill = "none") +
xlab("Mean prior probability ratings") +
ylab("Asking-whether ratings (not-at-issueness)") +
scale_x_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
scale_y_continuous(breaks=c(0,.5,1),labels=c("0",".5","1"), limits = c(0,1)) +
theme(panel.spacing.x = unit(4, "mm")) +
coord_fixed(ratio = 1) +
facet_wrap(. ~ short_trigger) +
theme(strip.background=element_rect(fill="white"))
ggsave(f="../graphs/SUP-aiproj-ai-by-prior.pdf",height=5,width=5)
